# Global settings
global:
  imagePullSecrets: []

# Server sub-chart configuration
server:
  enabled: true
  replicaCount: 1
  
  image:
    repository: kubelensai/kubelens-server
    pullPolicy: IfNotPresent
    tag: "latest"
  
  service:
    type: ClusterIP
    port: 8080
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  env:
    - name: PORT
      value: "8080"
    - name: LOG_LEVEL
      value: "info"
    - name: DATABASE_PATH
      value: "/data/kubelens.db"
  
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 1Gi
  
  podAnnotations: {}
  
  podSecurityContext:
    fsGroup: 2000
  
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# App sub-chart configuration
app:
  enabled: true
  replicaCount: 1
  
  image:
    repository: kubelensai/kubelens-app
    pullPolicy: IfNotPresent
    tag: "latest"
  
  service:
    type: ClusterIP
    port: 80
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  
  podAnnotations: {}
  
  podSecurityContext: {}
  
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 101
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Ingress configuration
ingress:
  enabled: false
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  hosts:
    - host: kubelens.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: kubelens-tls
      hosts:
        - kubelens.example.com

# Service Account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC configuration
rbac:
  create: true
  # Rules for cluster-wide access
  rules:
    - apiGroups: ["*"]
      resources: ["*"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["pods", "pods/log", "pods/exec"]
      verbs: ["get", "list", "create", "delete"]
    - apiGroups: ["apps"]
      resources: ["deployments", "deployments/scale"]
      verbs: ["get", "list", "update", "patch"]
