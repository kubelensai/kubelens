# Build stage
FROM golang:1.24-alpine AS builder

WORKDIR /app

# Build arguments for enabling modules
ARG BUILD_TAGS="gcp"

# Copy go mod files
COPY src/server/go.mod src/server/go.sum ./
RUN go mod download

# Copy source code
COPY src/server/ ./

# Build the application (Pure Go - no CGO needed)
# Modules are conditionally compiled based on BUILD_TAGS
RUN CGO_ENABLED=0 GOOS=linux go build -a -tags="${BUILD_TAGS}" -ldflags='-w -s' -o server ./cmd/server

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates

# Create non-root user (matching Helm chart UID 1000)
RUN addgroup -g 1000 kubelens && \
    adduser -D -u 1000 -G kubelens kubelens

WORKDIR /app

# Copy the binary from builder
COPY --from=builder /app/server .

# Create data directory with correct permissions
RUN mkdir -p /data && \
    chown -R kubelens:kubelens /app /data && \
    chmod +x /app/server

# Switch to non-root user
USER kubelens

# Expose port
EXPOSE 8080

# Run the binary
CMD ["./server"]

