name: Build and Deploy Kubelens

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  SERVER_IMAGE: kubelensai/kubelens-server
  APP_IMAGE: kubelensai/kubelens-app

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Server
        id: meta-server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.SERVER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for App
        id: meta-app
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.APP_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Server image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.server
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}
          cache-from: type=registry,ref=${{ env.SERVER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.SERVER_IMAGE }}:buildcache,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Build and push App image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.app
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-app.outputs.tags }}
          labels: ${{ steps.meta-app.outputs.labels }}
          cache-from: type=registry,ref=${{ env.APP_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.APP_IMAGE }}:buildcache,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: |
          echo "Server Image Digest: ${{ steps.meta-server.outputs.digest }}"
          echo "App Image Digest: ${{ steps.meta-app.outputs.digest }}"

  helm-deploy:
    name: Helm Deploy Kubelens
    runs-on: ubuntu-24.04
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create kubeconfig file
        run: echo "${{ secrets.KUBECONFIG }}" > ${{ github.workspace }}/kubeconfig
      
      - name: Deploy with Helmfile
        uses: helmfile/helmfile-action@v2
        with:
          helmfile-args: apply
        env:
          KUBECONFIG: '${{ github.workspace }}/kubeconfig'